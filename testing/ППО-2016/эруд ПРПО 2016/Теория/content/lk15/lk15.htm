<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns:st1="urn:schemas-microsoft-com:office:smarttags"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1251">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="lk15.files/filelist.xml">
<link rel=Edit-Time-Data href="lk15.files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Лекция 15</title>
<o:SmartTagType namespaceuri="urn:schemas-microsoft-com:office:smarttags"
 name="metricconverter"/>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Halk</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Александр Григорьев</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>1</o:TotalTime>
  <o:Created>2016-06-13T12:46:00Z</o:Created>
  <o:LastSaved>2016-06-13T12:46:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>5207</o:Words>
  <o:Characters>29681</o:Characters>
  <o:Company>home</o:Company>
  <o:Lines>247</o:Lines>
  <o:Paragraphs>69</o:Paragraphs>
  <o:CharactersWithSpaces>34819</o:CharactersWithSpaces>
  <o:Version>15.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:TargetScreenSize>800x600</o:TargetScreenSize>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="lk15.files/themedata.thmx">
<link rel=colorSchemeMapping href="lk15.files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>RU</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:UseWord2010TableStyleRules/>
   <w:DontGrowAutofit/>
   <w:DontUseIndentAsNumberingTabStop/>
   <w:FELineBreak11/>
   <w:WW11IndentRules/>
   <w:DontAutofitConstrainedTables/>
   <w:AutofitLikeWW11/>
   <w:HangulWidthLikeWW11/>
   <w:UseNormalStyleForList/>
   <w:DontVertAlignCellWithSp/>
   <w:DontBreakConstrainedForcedTables/>
   <w:DontVertAlignInTxbx/>
   <w:Word11KerningPairs/>
   <w:CachedColBalance/>
  </w:Compatibility>
  <w:BrowserLevel>MicrosoftInternetExplorer4</w:BrowserLevel>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" LatentStyleCount="371">
  <w:LsdException Locked="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="99" Name="Hyperlink"/>
  <w:LsdException Locked="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="99" Name="Normal (Web)"/>
  <w:LsdException Locked="false" Priority="99" Name="HTML Preformatted"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true"
   Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="99" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
 </w:LatentStyles>
</xml><![endif]--><!--[if !mso]><object
 classid="clsid:38481807-CA0E-42D2-BF39-B33AF135CC4D" id=ieooui></object>
<style>
st1\:*{behavior:url(#ieooui) }
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;
	mso-font-charset:2;
	mso-generic-font-family:auto;
	mso-font-pitch:variable;
	mso-font-signature:0 268435456 0 0 -2147483648 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:204;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536870145 1107305727 0 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";}
h1
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-next:Обычный;
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:16.0pt;
	font-family:"Arial",sans-serif;
	mso-font-kerning:16.0pt;
	font-weight:bold;}
h3
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:13.5pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
h4
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	font-weight:bold;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-parent:"";
	color:blue;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-unhide:no;
	color:#954F72;
	mso-themecolor:followedhyperlink;
	text-decoration:underline;
	text-underline:single;}
p
	{mso-style-priority:99;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";}
code
	{mso-style-unhide:no;
	mso-style-parent:"";
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-link:"Стандартный HTML Знак";
	margin:0cm;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";}
span.keyword
	{mso-style-name:keyword;
	mso-style-unhide:no;}
span.zag
	{mso-style-name:zag;
	mso-style-unhide:no;}
span.spelling-content-entity
	{mso-style-name:spelling-content-entity;
	mso-style-unhide:no;}
span.java4
	{mso-style-name:java4;
	mso-style-unhide:no;}
span.java10
	{mso-style-name:java10;
	mso-style-unhide:no;}
span.java8
	{mso-style-name:java8;
	mso-style-unhide:no;}
span.java16
	{mso-style-name:java16;
	mso-style-unhide:no;}
span.java9
	{mso-style-name:java9;
	mso-style-unhide:no;}
span.java3
	{mso-style-name:java3;
	mso-style-unhide:no;}
span.java7
	{mso-style-name:java7;
	mso-style-unhide:no;}
span.java5
	{mso-style-name:java5;
	mso-style-unhide:no;}
span.java0
	{mso-style-name:java0;
	mso-style-unhide:no;}
span.apple-converted-space
	{mso-style-name:apple-converted-space;
	mso-style-unhide:no;
	mso-style-parent:"";}
span.HTML
	{mso-style-name:"Стандартный HTML Знак";
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-parent:"";
	mso-style-link:"Стандартный HTML";
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;}
@page WordSection1
	{size:595.3pt 841.9pt;
	margin:2.0cm 42.5pt 2.0cm 3.0cm;
	mso-header-margin:35.4pt;
	mso-footer-margin:35.4pt;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 @list l0
	{mso-list-id:165751078;
	mso-list-template-ids:-1584352596;}
@list l0:level1
	{mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level2
	{mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level3
	{mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level4
	{mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level5
	{mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level6
	{mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level7
	{mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level8
	{mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l0:level9
	{mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;}
@list l1
	{mso-list-id:475687040;
	mso-list-template-ids:-1499029764;}
@list l1:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l1:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l1:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l1:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2
	{mso-list-id:836116995;
	mso-list-template-ids:-395951692;}
@list l2:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l2:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l2:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l2:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3
	{mso-list-id:1484663047;
	mso-list-template-ids:1658507756;}
@list l3:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l3:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l3:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l3:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4
	{mso-list-id:1544249811;
	mso-list-template-ids:1687188852;}
@list l4:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l4:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l4:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l4:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5
	{mso-list-id:1715226136;
	mso-list-template-ids:1994846950;}
@list l5:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l5:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l5:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l5:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6
	{mso-list-id:1800340075;
	mso-list-template-ids:-833821180;}
@list l6:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l6:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l6:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l6:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7
	{mso-list-id:1968848064;
	mso-list-template-ids:-1345691892;}
@list l7:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l7:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l7:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l7:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8
	{mso-list-id:1987586310;
	mso-list-template-ids:-401966560;}
@list l8:level1
	{mso-level-number-format:bullet;
	mso-level-text:\F0B7;
	mso-level-tab-stop:36.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Symbol;}
@list l8:level2
	{mso-level-number-format:bullet;
	mso-level-text:o;
	mso-level-tab-stop:72.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:"Courier New";
	mso-bidi-font-family:"Times New Roman";}
@list l8:level3
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:108.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level4
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:144.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level5
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:180.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level6
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:216.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level7
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:252.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level8
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:288.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
@list l8:level9
	{mso-level-number-format:bullet;
	mso-level-text:\F0A7;
	mso-level-tab-stop:324.0pt;
	mso-level-number-position:left;
	text-indent:-18.0pt;
	mso-ansi-font-size:10.0pt;
	font-family:Wingdings;}
ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Обычная таблица";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-unhide:no;
	mso-style-parent:"";
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;
	mso-para-margin:0cm;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=RU link=blue vlink="#954F72" style='tab-interval:35.4pt'>

<div class=WordSection1>

<p align=center style='margin-left:1.0cm;text-align:center'><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'>Лекция 15. </span>Работа с графикой.<o:p></o:p></b></p>

<h3 style='margin-left:1.0cm'><i style='mso-bidi-font-style:normal'><span
style='font-size:12.0pt;mso-bidi-font-size:13.5pt;font-weight:normal;
mso-bidi-font-weight:bold'>Примечание: полные листинги кода к данной лекции
находятся в этом файле - </span></i><span style='font-size:12.0pt;mso-bidi-font-size:
13.5pt;font-weight:normal;mso-bidi-font-weight:bold'><a
href="lk15.files/code.java">lk15.files\<span lang=EN-US style='mso-ansi-language:
EN-US'>code</span>.<span lang=EN-US style='mso-ansi-language:EN-US'>java</span></a></span><i
style='mso-bidi-font-style:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt;font-weight:normal;mso-bidi-font-weight:bold'><o:p></o:p></span></i></h3>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>2</span><span lang=EN-US style='font-size:14.0pt;mso-bidi-font-size:
13.5pt;mso-ansi-language:EN-US'>D</span><span style='font-size:14.0pt;
mso-bidi-font-size:13.5pt'> графика в </span><span lang=EN-US style='font-size:
14.0pt;mso-bidi-font-size:13.5pt;mso-ansi-language:EN-US'>Android</span><span
style='font-size:14.0pt;mso-bidi-font-size:13.5pt'><o:p></o:p></span></h3>

<h3 style='margin-left:1.0cm'><span style='font-size:12.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>На уровне </span><span lang=EN-US style='font-size:
12.0pt;mso-ansi-language:EN-US'>Libraries</span><span style='font-size:12.0pt;
font-weight:normal;mso-bidi-font-weight:bold'>:<o:p></o:p></span></h3>

<h3 style='margin-left:1.0cm'><span style='font-size:12.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>API OpenGL|ES<span style='mso-spacerun:yes'> 
</span>- используются для высокооптимизированной отрисовки 3D-графики, при
возможности используют аппаратное ускорение. Библиотеки реализованы на основе
OpenGL|ES (OpenGL for Embedded Systems) - подмножество графического
программного интерфейса OpenGL, адаптированное для работы на встраиваемых
системах.<o:p></o:p></span></h3>

<h3 style='margin-left:1.0cm'><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US;font-weight:normal;mso-bidi-font-weight:bold'>SGL</span><span
style='font-size:12.0pt;font-weight:normal;mso-bidi-font-weight:bold'> - </span><span
style='font-size:12.0pt;font-weight:normal'>Skia Graphics </span><span
lang=EN-US style='font-size:12.0pt;mso-ansi-language:EN-US;font-weight:normal'>Library</span><span
style='font-size:12.0pt;font-weight:normal'>. </span><span style='font-size:
12.0pt;font-weight:normal;mso-bidi-font-weight:bold'>открытый движок для работы
с 2D-графикой. Графическая библиотека является продуктом Google и часто
используется в других программах.<o:p></o:p></span></h3>

<h3 style='margin-left:1.0cm'><span style='font-size:12.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>На уровне </span><span lang=EN-US style='font-size:
12.0pt;mso-ansi-language:EN-US'>Application</span><span lang=EN-US
style='font-size:12.0pt'> </span><span lang=EN-US style='font-size:12.0pt;
mso-ansi-language:EN-US'>Framework</span><span style='font-size:12.0pt;
font-weight:normal;mso-bidi-font-weight:bold'> – это различные классы из пакетов
</span><code><span lang=EN-US style='font-size:12.0pt;font-family:"Times New Roman",serif;
mso-ansi-language:EN-US;font-weight:normal;mso-bidi-font-weight:bold'>android</span></code><code><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;font-weight:normal;
mso-bidi-font-weight:bold'>.</span></code><code><span lang=EN-US
style='font-size:12.0pt;font-family:"Times New Roman",serif;mso-ansi-language:
EN-US;font-weight:normal;mso-bidi-font-weight:bold'>view</span></code><code><span
lang=EN-US style='font-size:12.0pt;font-family:"Times New Roman",serif;
font-weight:normal;mso-bidi-font-weight:bold'> </span></code><code><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;font-weight:normal;
mso-bidi-font-weight:bold'>и </span></code><code><span lang=EN-US
style='font-size:12.0pt;font-family:"Times New Roman",serif;mso-ansi-language:
EN-US;font-weight:normal;mso-bidi-font-weight:bold'>android</span></code><code><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;font-weight:normal;
mso-bidi-font-weight:bold'>.</span></code><code><span lang=EN-US
style='font-size:12.0pt;font-family:"Times New Roman",serif;mso-ansi-language:
EN-US;font-weight:normal;mso-bidi-font-weight:bold'>graphics</span></code><code><span
style='font-size:12.0pt;font-family:"Times New Roman",serif;font-weight:normal;
mso-bidi-font-weight:bold'><o:p></o:p></span></code></h3>

<p style='margin-left:1.0cm'><b><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'>Аппаратное ускорение<o:p></o:p></span></b></p>

<p style='margin-left:1.0cm'>Начиная с <a name=keyword84></a><span
class=keyword>Android</span> 3.0 (<a name=keyword85></a><span class=keyword>API</span>
уровень 11), конвейер изображения 2D графики в <a name=keyword86></a><span
class=keyword>Android</span> поддерживает аппаратное ускорение. Это означает,
что все <a name=keyword87></a><span class=keyword>операции</span> рисования на
холсте исполняются с использованием <a name=keyword88></a><span class=keyword>GPU</span>.
В связи с увеличением требований к ресурсам <a name=keyword89></a><span
class=keyword>приложение</span> будет потреблять больше <a name=keyword90></a><span
class=keyword>RAM</span>. Аппаратное ускорение доступно <a name=keyword91></a><span
class=keyword>по</span> умолчанию, если целевой уровень <a name=keyword92></a><span
class=keyword>API</span> больше или равен 14, но может быть включено явно. Если
в приложении используются только стандартные представления и <a name=keyword93></a><span
class=keyword>графика</span>, включение аппаратного ускорения не должно
привести к каким-либо нежелательным графическим эффектам. Однако из-за того,
что аппаратное ускорение поддерживается не всеми операциями 2D графики, его
включение может нарушать некоторые пользовательские изображения или вызовы
рисования. Проблемы обычно проявляются в невидимости некоторых элементов,
появлении исключений или неверно изображенных пикселях. Чтобы исправить это, <a
name=keyword94></a><span class=keyword>Android</span> позволяет включать или
выключать аппаратное ускорение на разных уровнях: уровень приложения, уровень
активности, уровень окна, уровень элемента интерфейса.</p>

<p style='margin-left:1.0cm'><b><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'>OpenGL</span></b><span style='font-size:14.0pt;mso-bidi-font-size:12.0pt'>
<a name=keyword95></a><o:p></o:p></span></p>

<p style='margin-left:1.0cm'><span class=keyword>Android</span> поддерживает
высокопроизводительную 2D и <a name=keyword96></a><span class=keyword>3D</span>
графику с использованием открытой графической библиотеки OpenGL, точнее OpenGL
ES <a name=keyword97></a><span class=keyword>API</span>. Библиотека OpenGL
является кросс-платформенным <a name=keyword98></a><span class=keyword>API</span>,
который определяет стандартный программный <a name=keyword99></a><span
class=keyword>интерфейс</span> для аппаратного обеспечения, занимающегося
обработкой <a name=keyword100></a><span class=keyword>3D</span> графики. OpenGL
ES является разновидностью OpenGL, предназначенной для встроенных устройств. <a
name=keyword101></a><span class=keyword>Android</span> поддерживает несколько
версий OpenGL ES <a name=keyword102></a><span class=keyword>API</span>:</p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.0cm;text-indent:0cm;mso-list:l6 level1 lfo8;tab-stops:list 36.0pt'><![if !supportLists]><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]>OpenGL
ES 1.0 и 1.1 поддерживается Android 1.0 и выше;</p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.0cm;text-indent:0cm;mso-list:l6 level1 lfo8;tab-stops:list 36.0pt'><![if !supportLists]><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]>OpenGL
ES 2.0 поддерживается Android 2.2 (API уровень 8) и выше;</p>

<p class=MsoNormal style='mso-margin-top-alt:auto;mso-margin-bottom-alt:auto;
margin-left:1.0cm;text-indent:0cm;mso-list:l6 level1 lfo8;tab-stops:list 36.0pt'><![if !supportLists]><span
style='font-size:10.0pt;mso-bidi-font-size:12.0pt;font-family:Symbol;
mso-fareast-font-family:Symbol;mso-bidi-font-family:Symbol'><span
style='mso-list:Ignore'>·<span style='font:7.0pt "Times New Roman"'>&nbsp; </span></span></span><![endif]>OpenGL
ES 3.0 поддерживается Android 4.3 (API уровень 18) и выше.</p>

<p style='margin-left:1.0cm'><a name=keyword103></a><span class=keyword>Поддержка</span>
OpenGL ES 3.0 на реальном устройстве требует реализации графического конвейера,
предоставленной производителем. Поэтому устройство с <a name=keyword104></a><span
class=keyword>Android</span> 4.3 и выше может не поддерживать OpenGL ES 3.0.</p>

<h3 style='margin-left:1.0cm'><strong><span style='mso-bidi-font-weight:normal'>Android
framework API</span></strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'> предоставляет набор классов для плоского рисования на экране приложения,
которые позволяют Вам нарисовать любую графику и текст, или модифицировать
имеющиеся представления </span><strong><span style='mso-bidi-font-weight:normal'>View</span></strong><span
style='font-weight:normal;mso-bidi-font-weight:bold'> согласно Вашим пожеланиям
и чувствам. Когда рисуете </span><strong><span style='mso-bidi-font-weight:
normal'>2D</span></strong><span style='font-weight:normal;mso-bidi-font-weight:
bold'>-графику, обычно это делают двумя способами:<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'><strong>a</strong>. Рисование графики или анимации
в пределах объекта View, находящегося на разметке окна программы (<strong>layout</strong>).
В этом случае рисование графики обрабатывается системой по обычной иерархии
процесса рисования View — Вы просто задаете нужные графические представления
внутри View.<br>
<strong>b</strong>. Рисование графики напрямую на экране программы как на
холсте (на <strong>Canvas</strong>). В этом случае Вы персонально вызываете
подходящий метод класса <strong>onDraw</strong>() (передавая ему Ваш Canvas),
или одним из методов Canvas, начинающимся на draw...() (наподобие
drawPicture()). При этом Вы также контролируете любую анимацию.</p>

<p style='margin-left:1.0cm'>Опция &quot;a&quot;, рисование в View, является
лучшим выбором, когда Вы хотите нарисовать простые графические объекты, которые
не нужно динамически изменять, и которые не являются частью требовательной к
быстроте прорисовки игры. Например, Вы должны рисовать Вашу графику в View,
когда хотите отобразить статическую графику или заранее предопределенную
анимацию в некотором статическом приложении. Для получения подробностей см.
ниже раздел &quot;Рисуемые объекты (Drawables)&quot;.</p>

<p style='margin-left:1.0cm'>Опция &quot;b&quot;, рисование на Canvas, лучше
подходит, когда Ваше приложение требует регулярной собственной перерисовки.
Приложения наподобие видеоигр должны самостоятельно рисовать на Canvas. Однако
есть несколько способов такого рисования:</p>

<p style='margin-left:1.0cm'>• В том же самом потоке, который обрабатывает UI
Activity приложения, где Вы создаете пользовательское представление View в
Вашей разметке окна (layout), вызываете <span style='color:#3366FF'>invalidate()</span>
и затем обрабатываете обратный вызов <span style='color:#3366FF'>onDraw()</span>.<br>
• Или в отдельном потоке, где Вы обрабатываете <span style='color:#3366FF'>SurfaceView</span>
и выполняете рисование на Canvas так быстро, как позволяет Ваш поток (в этом
случае не нужно запрашивать invalidate()).</p>

<p style='margin-left:1.0cm'><strong><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'>Рисование с помощью Canvas</span></strong><span style='font-size:14.0pt;
mso-bidi-font-size:12.0pt'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Для рисования используется объект <a
href="http://developer.android.com/reference/android/graphics/Canvas.html"
target="_blank">Canvas</a>. Сразу договоримся, что я буду называть его «канва».
Тем более, что в русском языке даже есть такое слово, известное в узких кругах
вышивающих крестиком. Можно еще, конечно, Canvas перевести как «холст» или
«полотно», но как-то пафосно получается. «Канва» - проще и удобнее для меня.</p>

<p style='margin-left:1.0cm'>Сразу скажу, что канва является лишь инструментом
для рисования. А весь результат сохраняется на <a
href="http://developer.android.com/reference/android/graphics/Bitmap.html"
target="_blank">Bitmap</a>. Мы не можем напрямую попросить Bitmap нарисовать на
себе линию или круг, поэтому канва выступает посредником и помогает нам
нарисовать то, что нужно.</p>

<p style='margin-left:1.0cm'>Разберем два способа получения доступа к канве.</p>

<p style='margin-left:1.0cm'>Первый способ – через наследника <a
href="http://developer.android.com/reference/android/view/View.html"
target="_blank">View</a> класса. Нам нужно просто переопределить его метод <a
href="http://developer.android.com/reference/android/view/View.html#onDraw%28android.graphics.Canvas%29"
target="_blank">onDraw</a> и он даст нам доступ к канве. Кода тут минимум и все
предельно просто. Но есть недостаток – все рисование выполняется в основном
потоке. Это прокатит, если у вас статичная картинка или не слишком динамичная
анимация.</p>

<p style='margin-left:1.0cm'>Второй способ – через <a
href="http://developer.android.com/reference/android/view/SurfaceView.html"
target="_blank">SurfaceView</a>. Этот способ подойдет, если планируете рисовать
что-то тяжелое и динамичное. Под рисование здесь будет выделен отдельный поток.
Это уже немного посложнее в реализации, чем первый способ.</p>

<p style='margin-left:1.0cm'>Создадим проект:</p>

<p style='margin-left:1.0cm'><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>Project</span><span lang=EN-US> </span></strong><strong><span
lang=EN-US style='mso-ansi-language:EN-US'>name</span></strong>: <span
lang=EN-US style='mso-ansi-language:EN-US'>P</span>1411_<span lang=EN-US
style='mso-ansi-language:EN-US'>CanvasView</span><br>
<strong><span lang=EN-US style='mso-ansi-language:EN-US'>Build</span><span
lang=EN-US> </span></strong><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>Target</span></strong>: <span lang=EN-US style='mso-ansi-language:EN-US'>Android</span>
2.3.3 <br>
<strong><span lang=EN-US style='mso-ansi-language:EN-US'>Application</span><span
lang=EN-US> </span></strong><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>name</span></strong>: <span lang=EN-US style='mso-ansi-language:EN-US'>CanvasView</span><br>
<strong><span lang=EN-US style='mso-ansi-language:EN-US'>Package</span><span
lang=EN-US> </span></strong><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>name</span></strong>: <span lang=EN-US style='mso-ansi-language:EN-US'>ru</span>.<span
lang=EN-US style='mso-ansi-language:EN-US'>startandroid</span>.<span
lang=EN-US style='mso-ansi-language:EN-US'>develop</span>.<span lang=EN-US
style='mso-ansi-language:EN-US'>p</span>1411<span lang=EN-US style='mso-ansi-language:
EN-US'>canvasview</span><br>
<strong><span lang=EN-US style='mso-ansi-language:EN-US'>Create</span><span
lang=EN-US> </span></strong><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>Activity</span></strong>: <span lang=EN-US style='mso-ansi-language:
EN-US'>MainActivity</span></p>

<p style='margin-left:1.0cm'>Код<span lang=EN-US style='mso-ansi-language:EN-US'>
MainActivity.java:<o:p></o:p></span></p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java4>public class </span><span class=java10>MainActivity </span><span
class=java4>extends </span><span class=java10>Activity </span><span
class=java8>{</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onCreate</span><span class=java8>(</span><span
class=java10>Bundle savedInstanceState</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java10>.onCreate</span><span class=java8>(</span><span class=java10>savedInstanceState</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; setContentView</span><span class=java8>(</span><span
class=java4>new </span><span class=java10>DrawView</span><span class=java8>(</span><span
class=java4>this</span><span class=java8>))</span><span class=java10>;</span><br>
<span class=java10>&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java4>class </span><span
class=java10>DrawView </span><span class=java4>extends </span><span
class=java10>View </span><span class=java8>{</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java10>DrawView</span><span class=java8>(</span><span class=java10>Context
context</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java8>(</span><span class=java10>context</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onDraw</span><span class=java8>(</span><span
class=java10>Canvas canvas</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>canvas.drawColor</span><span
class=java8>(</span><span class=java10>Color.GREEN</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><br>
<span class=java8>&nbsp; }</span><br>
<span class=java8>&nbsp; </span><br>
<span class=java8>}</span><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>В <b>onCreate</b> мы в метод setContentView
передаем не layout-файл, как обычно, а свой view-компонент DrawView. Он будет
занимать все содержимое Activity.</p>

<p style='margin-left:1.0cm'>Класс <b>DrawView</b> является наследником View и
переопределяет его метод onDraw. А этот метод дает нам доступ к объекту Canvas.
Пока что не будем рисовать ничего особенного, а просто закрасим все зеленым
цветом с помощью метода <a
href="http://developer.android.com/reference/android/graphics/Canvas.html#drawColor%28int%29"
target="_blank">drawColor</a>.</p>

<p style='margin-left:1.0cm'>Собственно, все. Готово первое приложение, которое
что-то рисует на экране.</p>

<p style='margin-left:1.0cm'>Все сохраняем, запускаем и видим результат.</p>

<p style='margin-left:1.0cm'><!--[if gte vml 1]><v:shapetype id="_x0000_t75"
 coordsize="21600,21600" o:spt="75" o:preferrelative="t" path="m@4@5l@4@11@9@11@9@5xe"
 filled="f" stroked="f">
 <v:stroke joinstyle="miter"/>
 <v:formulas>
  <v:f eqn="if lineDrawn pixelLineWidth 0"/>
  <v:f eqn="sum @0 1 0"/>
  <v:f eqn="sum 0 0 @1"/>
  <v:f eqn="prod @2 1 2"/>
  <v:f eqn="prod @3 21600 pixelWidth"/>
  <v:f eqn="prod @3 21600 pixelHeight"/>
  <v:f eqn="sum @0 0 1"/>
  <v:f eqn="prod @6 1 2"/>
  <v:f eqn="prod @7 21600 pixelWidth"/>
  <v:f eqn="sum @8 21600 0"/>
  <v:f eqn="prod @7 21600 pixelHeight"/>
  <v:f eqn="sum @10 21600 0"/>
 </v:formulas>
 <v:path o:extrusionok="f" gradientshapeok="t" o:connecttype="rect"/>
 <o:lock v:ext="edit" aspectratio="t"/>
</v:shapetype><v:shape id="_x0000_i1025" type="#_x0000_t75" style='width:480pt;
 height:300pt'>
 <v:imagedata src="lk15.files/image001.png" o:href="http://startandroid.ru/images/stories/lessons/L0141/L0141_010.png"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=640 height=400
src="lk15.files/image002.jpg" v:shapes="_x0000_i1025"><![endif]></p>

<p style='margin-left:1.0cm'>Экран зеленый, как мы и просили.</p>

<p style='margin-left:1.0cm'>Метод onDraw был вызван системой, когда возникла
необходимость прорисовать View-компонент на экране. Это также произойдет,
например, если выключить-включить экран. Попробуйте поставить в onDraw лог и
посмотреть результат.</p>

<p style='margin-left:1.0cm'>Если вам надо, чтобы на канве была какая-то
анимация, необходимо самим постоянно вызывать перерисовку экрана, когда ваши
изменения готовы к отображению. Для этого используется метод <a
href="http://developer.android.com/reference/android/view/View.html#invalidate%28%29"
target="_blank">invalidate</a>. Вызываете его и он в свою очередь вызовет
onDraw. Также есть реализации метода invalidate, которые позволяет перерисовать
не весь компонент, а только его часть, указав координаты.</p>

<p style='margin-left:1.0cm'>Если нужна цикличная прорисовка, можно поместить
метод invalidate прямо в onDraw и View будет постоянно перерисовываться. Будем
так делать, но только для упрощения кода. А в действительности это не очень
хорошая практика, т.к. это все будет идти в основном потоке. И правильнее будет
реализовать такую постоянную перерисовку через SurfaceView.</p>

<p style='margin-left:1.0cm'>Давайте посмотрим как это делается.</p>

<h3 style='margin-left:1.0cm'><span lang=EN-US style='font-size:14.0pt;
mso-bidi-font-size:13.5pt;mso-ansi-language:EN-US'>SurfaceView<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Перепишем<span style='mso-ansi-language:EN-US'> <b><span
lang=EN-US>MainActivity.java</span></b><span lang=EN-US>:<o:p></o:p></span></span></p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java4>public class </span><span class=java10>MainActivity </span><span
class=java4>extends </span><span class=java10>Activity </span><span
class=java8>{</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onCreate</span><span class=java8>(</span><span
class=java10>Bundle savedInstanceState</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java10>.onCreate</span><span class=java8>(</span><span class=java10>savedInstanceState</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; setContentView</span><span class=java8>(</span><span
class=java4>new </span><span class=java10>DrawView</span><span class=java8>(</span><span
class=java4>this</span><span class=java8>))</span><span class=java10>;</span><br>
<span class=java10>&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java4>class </span><span
class=java10>DrawView </span><span class=java4>extends </span><span
class=java10>SurfaceView </span><span class=java4>implements </span><span
class=java10>SurfaceHolder.Callback </span><span class=java8>{</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>private </span><span
class=java10>DrawThread drawThread;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java10>DrawView</span><span class=java8>(</span><span class=java10>Context
context</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java8>(</span><span class=java10>context</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; getHolder</span><span
class=java8>()</span><span class=java10>.addCallback</span><span class=java8>(</span><span
class=java4>this</span><span class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java9>void </span><span class=java10>surfaceChanged</span><span
class=java8>(</span><span class=java10>SurfaceHolder holder, </span><span
class=java9>int </span><span class=java10>format, </span><span class=java9>int </span><span
class=java10>width,</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java9>int </span><span class=java10>height</span><span class=java8>) {</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; }</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java9>void </span><span class=java10>surfaceCreated</span><span
class=java8>(</span><span class=java10>SurfaceHolder holder</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>drawThread
= </span><span class=java4>new </span><span class=java10>DrawThread</span><span
class=java8>(</span><span class=java10>getHolder</span><span class=java8>())</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; drawThread.setRunning</span><span
class=java8>(</span><span class=java4>true</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; drawThread.start</span><span
class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java9>void </span><span class=java10>surfaceDestroyed</span><span
class=java8>(</span><span class=java10>SurfaceHolder holder</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java9>boolean
</span><span class=java10>retry = </span><span class=java4>true</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; drawThread.setRunning</span><span
class=java8>(</span><span class=java4>false</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>while
</span><span class=java8>(</span><span class=java10>retry</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java4>try </span><span class=java8>{</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java10>drawThread.join</span><span class=java8>()</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; retry
= </span><span class=java4>false</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java8>} </span><span class=java4>catch </span><span class=java8>(</span><span
class=java10>InterruptedException e</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; }</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>class </span><span
class=java10>DrawThread </span><span class=java4>extends </span><span
class=java10>Thread </span><span class=java8>{</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>private
</span><span class=java9>boolean </span><span class=java10>running = </span><span
class=java4>false</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>private
</span><span class=java10>SurfaceHolder surfaceHolder;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>public
</span><span class=java10>DrawThread</span><span class=java8>(</span><span
class=java10>SurfaceHolder surfaceHolder</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java4>this</span><span class=java10>.surfaceHolder = surfaceHolder;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>public
</span><span class=java9>void </span><span class=java10>setRunning</span><span
class=java8>(</span><span class=java9>boolean </span><span class=java10>running</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java4>this</span><span class=java10>.running = running;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>public
</span><span class=java9>void </span><span class=java10>run</span><span
class=java8>() {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java10>Canvas canvas;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java4>while </span><span class=java8>(</span><span class=java10>running</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java10>canvas = </span><span class=java4>null</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java4>try </span><span class=java8>{</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java10>canvas = surfaceHolder.lockCanvas</span><span
class=java8>(</span><span class=java4>null</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java4>if </span><span class=java8>(</span><span
class=java10>canvas == </span><span class=java4>null</span><span class=java8>)</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java4>continue</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
canvas.drawColor</span><span class=java8>(</span><span class=java10>Color.GREEN</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
class=java8>} </span><span class=java4>finally </span><span class=java8>{</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java4>if </span><span class=java8>(</span><span
class=java10>canvas != </span><span class=java4>null</span><span class=java8>)
{</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java10>surfaceHolder.unlockCanvasAndPost</span><span
class=java8>(</span><span class=java10>canvas</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span><span class=java8>}</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; }</span><br>
<br>
<span class=java8>&nbsp; }</span><br>
<br>
<span class=java8>}</span><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Стало чуть сложнее, правда? Сейчас разберемся что
к чему.</p>

<p style='margin-left:1.0cm'>Метод <b>onCreate</b>, собственно, ничуть не
изменился. Мы также в метод setContentView передаем наш объект DrawView.</p>

<p style='margin-left:1.0cm'>Смотрим <b>DrawView</b>.&nbsp; Он является
наследником SurfaceView и заодно реализует интерфейс обработчика <a
href="http://developer.android.com/reference/android/view/SurfaceHolder.Callback.html"
target="_blank">SurfaceHolder.Callback</a>.</p>

<p style='margin-left:1.0cm'>В <b>конструкторе</b> DrawView мы <a
href="http://developer.android.com/reference/android/view/SurfaceView.html#getHolder%28%29"
target="_blank">получаем</a> <a
href="http://developer.android.com/reference/android/view/SurfaceHolder.html"
target="_blank">SurfaceHolder</a> и <a
href="http://developer.android.com/reference/android/view/SurfaceHolder.html#addCallback%28android.view.SurfaceHolder.Callback%29"
target="_blank">сообщаем</a> ему, что сами будем обрабатывать его события.
Таких событий три:</p>

<p style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/view/SurfaceHolder.Callback.html#surfaceChanged%28android.view.SurfaceHolder,%20int,%20int,%20int%29"
target="_blank">surfaceChanged</a> - был изменен формат или размер SurfaceView</p>

<p style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/view/SurfaceHolder.Callback.html#surfaceCreated%28android.view.SurfaceHolder%29"
target="_blank">surfaceCreated</a> – SurfaceView создан и готов к отображению
информации</p>

<p style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/view/SurfaceHolder.Callback.html#surfaceDestroyed%28android.view.SurfaceHolder%29"
target="_blank">surfaceDestroyed</a> – вызывается перед тем, как SurfaceView
будет уничтожен</p>

<p style='margin-left:1.0cm'>В <b>surfaceCreated</b> мы создаем свой поток
прорисовки (о нем чуть позже), передаем ему SurfaceHolder. Вызовом метода
setRunning(true) ставим ему метку о том, что он может работать и стартуем его.</p>

<p style='margin-left:1.0cm'>В <b>surfaceDestroyed</b> мы своему потоку
сообщаем (setRunning(false)) о том, что его работа должна быть прекращена, т.к.
SurfaceView сейчас будет уничтожено. Далее запускаем цикл, который ждет, пока
не завершит работу наш поток прорисовки. Дождаться надо обязательно, иначе
поток может попытаться нарисовать что-либо на уничтоженном SurfaceView.</p>

<p style='margin-left:1.0cm'><b>DrawThread</b>, наследник Thread, – это наш
поток прорисовки. В нем и будет происходить рисование.</p>

<p style='margin-left:1.0cm'>В <b>конструктор</b> передаем SurfaceHolder. Он
нам нужен, чтобы добраться до канвы.</p>

<p style='margin-left:1.0cm'>Метод <b>setRunning</b> ставит метку работы,
сообщающую потоку, можно ли работать.</p>

<p style='margin-left:1.0cm'>Метод <b>run</b>. В нем видим цикл, который
выполняется пока позволяет метка работы (running). В цикле обнуляем переменную
канвы, затем от SurfaceHolder получаем канву методом <a
href="http://developer.android.com/reference/android/view/SurfaceHolder.html#lockCanvas%28%29"
target="_blank">lockCanvas</a>. На всякий случай проверяем, что канва не null,
и можно рисовать: снова просто закрашиваем все зеленым цветом. После того, как
нарисовали, что хотели, мы возвращаем канву объекту SurfaceHolder методом <a
href="http://developer.android.com/reference/android/view/SurfaceHolder.html#unlockCanvasAndPost%28android.graphics.Canvas%29"
target="_blank">unlockCanvasAndPost</a> в секции finally (обязательной для
выполнения) и SurfaceView отобразит наши художества.</p>

<p style='margin-left:1.0cm'>Соответственно, когда в <b>surfaceDestroyed</b>
вызывается метод setRunning(false), происходит выход из цикла в методе <b>run</b>
и поток завершает свою работу.</p>

<p style='margin-left:1.0cm'>Когда мы рассматривали первый способ получения
канвы (через onDraw), я упомянул, что надо самим вызывать invalidate, если
нужна постоянная перерисовка. Во втором способе ничего такого делать уже не
надо. У нас так идет постоянная перерисовка в цикле.</p>

<p class=MsoNormal style='margin-left:1.0cm'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt'><o:p>&nbsp;</o:p></span></b></p>

<p class=MsoNormal style='margin-left:1.0cm'><b style='mso-bidi-font-weight:
normal'><span style='font-size:14.0pt'>Использование Matrix для геометрических
преобразований фигур<o:p></o:p></span></b></p>

<p style='margin-left:1.0cm'>Рисовать фигуры мы умеем, но бывает необходимость
эти фигуры перемещать по экрану, поворачивать и менять их размеры. Тут нам
поможет <a
href="http://developer.android.com/reference/android/graphics/Matrix.html"
target="_blank">Matrix</a>. Будем называть этот объект матрицей. Тем более, что
это действительно 3х3 матрица из алгебры.</p>

<p style='margin-left:1.0cm'>Матрица умеет выполнять четыре основные операции
над фигурой:</p>

<p style='margin-left:1.0cm'><b>translate</b> – перемещение</p>

<p style='margin-left:1.0cm'><b>scale</b> – изменение размера</p>

<p style='margin-left:1.0cm'><b>rotate</b> – поворот</p>

<p style='margin-left:1.0cm'><b>skew</b> - наклон</p>

<p style='margin-left:1.0cm'>Рассмотрим некоторые из этих операций на примерах.
Начнем с перемещения.</p>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>Перемещение<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Создадим проект:</p>

<p style='margin-left:1.0cm'><strong><span lang=EN-US style='mso-ansi-language:
EN-US'>Project name</span></strong><span lang=EN-US style='mso-ansi-language:
EN-US'>: P1441_MatrixTransform<br>
<strong>Build Target</strong>: Android 2.3.3 <br>
<strong>Application name</strong>: MatrixTransform<br>
<strong>Package name</strong>: ru.startandroid.develop.p1441matrixtransform<br>
<strong>Create Activity</strong>: MainActivity<o:p></o:p></span></p>

<p style='margin-left:1.0cm'><b><span lang=EN-US style='mso-ansi-language:EN-US'>MainActivity.java</span></b><span
lang=EN-US style='mso-ansi-language:EN-US'>:<o:p></o:p></span></p>

<pre style='margin-left:1.0cm'><span class=java4><span lang=EN-US
style='mso-ansi-language:EN-US'>package </span></span><span class=java10><span
lang=EN-US style='mso-ansi-language:EN-US'>ru.startandroid.develop.p1441matrixtransform;</span></span><span
lang=EN-US style='mso-ansi-language:EN-US'><br>
<br>
<span class=java4>import </span><span class=java10>android.app.Activity;</span><br>
<span class=java4>import </span><span class=java10>android.content.Context;</span><br>
<span class=java4>import </span><span class=java10>android.graphics.Canvas;</span><br>
<span class=java4>import </span><span class=java10>android.graphics.Color;</span><br>
<span class=java4>import </span><span class=java10>android.graphics.Matrix;</span><br>
<span class=java4>import </span><span class=java10>android.graphics.Paint;</span><br>
<span class=java4>import </span><span class=java10>android.graphics.Path;</span><br>
<span class=java4>import </span><span class=java10>android.os.Bundle;</span><br>
<span class=java4>import </span><span class=java10>android.view.View;</span><br>
<br>
<span class=java4>public class </span><span class=java10>MainActivity </span><span
class=java4>extends </span><span class=java10>Activity </span><span
class=java8>{</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onCreate</span><span class=java8>(</span><span
class=java10>Bundle savedInstanceState</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java10>.onCreate</span><span class=java8>(</span><span class=java10>savedInstanceState</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; setContentView</span><span class=java8>(</span><span
class=java4>new </span><span class=java10>DrawView</span><span class=java8>(</span><span
class=java4>this</span><span class=java8>))</span><span class=java10>;</span><br>
<span class=java10>&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp; </span><span class=java4>class </span><span
class=java10>DrawView </span><span class=java4>extends </span><span
class=java10>View </span><span class=java8>{</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java10>Paint p;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; Path path;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; Matrix matrix;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java10>DrawView</span><span class=java8>(</span><span class=java10>Context context</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java8>(</span><span class=java10>context</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = </span><span class=java4>new </span><span
class=java10>Paint</span><span class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setStrokeWidth</span><span
class=java8>(</span><span class=java7>3</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setStyle</span><span
class=java8>(</span><span class=java10>Paint.Style.STROKE</span><span
class=java8>)</span><span class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path = </span><span
class=java4>new </span><span class=java10>Path</span><span class=java8>()</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; matrix = </span><span
class=java4>new </span><span class=java10>Matrix</span><span class=java8>()</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onDraw</span><span class=java8>(</span><span
class=java10>Canvas canvas</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>canvas.drawARGB</span><span
class=java8>(</span><span class=java7>80</span><span class=java10>, </span><span
class=java7>102</span><span class=java10>, </span><span class=java7>204</span><span
class=java10>, </span><span class=java7>255</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// </span></span><span
class=java3>создаем</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>крест</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>в</span><span class=java3><span lang=EN-US style='mso-ansi-language:
EN-US'> path</span></span><span lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>path.reset</span><span
class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path.addRect</span><span
class=java8>(</span><span class=java7>300</span><span class=java10>, </span><span
class=java7>150</span><span class=java10>, </span><span class=java7>450</span><span
class=java10>, </span><span class=java7>200</span><span class=java10>, Path.Direction.CW</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path.addRect</span><span
class=java8>(</span><span class=java7>350</span><span class=java10>, </span><span
class=java7>100</span><span class=java10>, </span><span class=java7>400</span><span
class=java10>, </span><span class=java7>250</span><span class=java10>, Path.Direction.CW</span><span
class=java8>)</span><span class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// </span></span><span
class=java3>рисуем</span><span class=java3><span lang=EN-US style='mso-ansi-language:
EN-US'> path </span>зеленым</span><span lang=EN-US style='mso-ansi-language:
EN-US'><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>p.setColor</span><span
class=java8>(</span><span class=java10>Color.GREEN</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas.drawPath</span><span
class=java8>(</span><span class=java10>path, p</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// </span></span><span
class=java3>настраиваем</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>матрицу</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>на</span><span class=java3><span style='mso-ansi-language:EN-US'> </span>перемещение</span><span
class=java3><span style='mso-ansi-language:EN-US'> </span>на</span><span
class=java3><span lang=EN-US style='mso-ansi-language:EN-US'> 300 </span>вправо</span><span
class=java3><span style='mso-ansi-language:EN-US'> </span>и</span><span
class=java3><span lang=EN-US style='mso-ansi-language:EN-US'> 200 </span>вниз</span><span
lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>matrix.reset</span><span
class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; matrix.setTranslate</span><span
class=java8>(</span><span class=java7>300</span><span class=java10>, </span><span
class=java7>200</span><span class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// </span></span><span
class=java3>применяем</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>матрицу</span><span class=java3><span style='mso-ansi-language:
EN-US'> </span>к</span><span class=java3><span lang=EN-US style='mso-ansi-language:
EN-US'> path</span></span><span lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>path.transform</span><span
class=java8>(</span><span class=java10>matrix</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// </span></span><span
class=java3>рисуем</span><span class=java3><span lang=EN-US style='mso-ansi-language:
EN-US'> path </span>синим</span><span lang=EN-US style='mso-ansi-language:EN-US'><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>p.setColor</span><span
class=java8>(</span><span class=java10>Color.BLUE</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas.drawPath</span><span
class=java8>(</span><span class=java10>path, p</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<br>
<span class=java8>&nbsp; }</span><br>
<br>
<span class=java8>}</span><o:p></o:p></span></pre>

<p style='margin-left:1.0cm'>Результат:</p>

<p style='margin-left:1.0cm'><!--[if gte vml 1]><v:shape id="_x0000_i1026"
 type="#_x0000_t75" style='width:480pt;height:300pt'>
 <v:imagedata src="lk15.files/image003.png" o:href="http://startandroid.ru/images/stories/lessons/L0144/L0144_010.png"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=640 height=400
src="lk15.files/image004.jpg" v:shapes="_x0000_i1026"><![endif]></p>

<p style='margin-left:1.0cm'>В конструкторе DrawView создаем объекты matrix и
path.</p>

<p style='margin-left:1.0cm'>В onDraw очищаем path, добавляем к нему пару
прямоугольников, чтобы получился крест, и выводим на экран зеленым цветом.
Далее очищаем матрицу методом <a
href="http://developer.android.com/reference/android/graphics/Matrix.html#reset%28%29"
target="_blank">reset</a> и настраиваем смещение на 300 вправо и 200 вниз
методом <a
href="http://developer.android.com/reference/android/graphics/Matrix.html#setTranslate%28float,%20float%29"
target="_blank">setTranslate</a>. Матрица настроена и готова к выполнению
преобразований.</p>

<p style='margin-left:1.0cm'>Методом <a
href="http://developer.android.com/reference/android/graphics/Path.html#transform%28android.graphics.Matrix%29"
target="_blank">transform</a> объекта path мы выполняем преобразование этого
объекта согласно переданной в этот метод матрице. Т.е. фигура path должна
сместиться вправо на 300 и вниз на 200.</p>

<p style='margin-left:1.0cm'>Включаем синий цвет и выводим измененную фигуру
path на экран. На скриншоте видно, что синяя фигура смещена так, как мы и
планировали.</p>

<p style='margin-left:1.0cm'>Вот и весь алгоритм использования матрицы. Т.е.
сначала мы матрицу настраиваем, а потом применяем к какой-либо фигуре и фигура
трансформируется согласно настройкам этой матрицы.</p>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>Изменение размера<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Перепишем класс <b>DrawView</b>:</p>

<pre style='margin-left:1.0cm'><span class=java4>class </span><span
class=java10>DrawView </span><span class=java4>extends </span><span
class=java10>View </span><span class=java8>{</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java10>Paint p;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; Path path;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; Matrix matrix;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java4>public </span><span
class=java10>DrawView</span><span class=java8>(</span><span class=java10>Context context</span><span
class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java4>super</span><span
class=java8>(</span><span class=java10>context</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p = </span><span class=java4>new </span><span
class=java10>Paint</span><span class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setStrokeWidth</span><span
class=java8>(</span><span class=java7>3</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; p.setStyle</span><span
class=java8>(</span><span class=java10>Paint.Style.STROKE</span><span
class=java8>)</span><span class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path = </span><span
class=java4>new </span><span class=java10>Path</span><span class=java8>()</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; matrix = </span><span
class=java4>new </span><span class=java10>Matrix</span><span class=java8>()</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><span class=java16>@Override</span><br>
<span class=java16>&nbsp;&nbsp;&nbsp; </span><span class=java4>protected </span><span
class=java9>void </span><span class=java10>onDraw</span><span class=java8>(</span><span
class=java10>Canvas canvas</span><span class=java8>) {</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>canvas.drawARGB</span><span
class=java8>(</span><span class=java7>80</span><span class=java10>, </span><span
class=java7>102</span><span class=java10>, </span><span class=java7>204</span><span
class=java10>, </span><span class=java7>255</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// создаем крест в path</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>path.reset</span><span
class=java8>()</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path.addRect</span><span
class=java8>(</span><span class=java7>300</span><span class=java10>,</span><span
class=java7>150</span><span class=java10>,</span><span class=java7>450</span><span
class=java10>,</span><span class=java7>200</span><span class=java10>, Path.Direction.CW</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; path.addRect</span><span
class=java8>(</span><span class=java7>350</span><span class=java10>,</span><span
class=java7>100</span><span class=java10>,</span><span class=java7>400</span><span
class=java10>,</span><span class=java7>250</span><span class=java10>, Path.Direction.CW</span><span
class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// рисуем path зеленым</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>p.setColor</span><span
class=java8>(</span><span class=java10>Color.GREEN</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas.drawPath</span><span
class=java8>(</span><span class=java10>path, p</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// настраиваем матрицу на изменение размера:</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // в 2 раза по горизонтали</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // в 2,5 по вертикали</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // относительно точки (375, 100)</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>matrix.reset</span><span
class=java8>()</span><span class=java10>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; matrix.setScale</span><span
class=java8>(</span><st1:metricconverter ProductID="2f" w:st="on"><span
 class=java7>2f</span></st1:metricconverter><span class=java10>, </span><span
class=java7>2.5f</span><span class=java10>, </span><span class=java7>375</span><span
class=java10>, </span><span class=java7>100</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// применяем матрицу к path</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>path.transform</span><span
class=java8>(</span><span class=java10>matrix</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// рисуем path синим</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>p.setColor</span><span
class=java8>(</span><span class=java10>Color.BLUE</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas.drawPath</span><span
class=java8>(</span><span class=java10>path, p</span><span class=java8>)</span><span
class=java10>;</span><br>
<br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java3>// рисуем точку относительно которой было выполнено преобразование</span><br>
<span class=java3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class=java10>p.setColor</span><span
class=java8>(</span><span class=java10>Color.BLACK</span><span class=java8>)</span><span
class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; canvas.drawCircle</span><span
class=java8>(</span><span class=java7>375</span><span class=java10>, </span><span
class=java7>100</span><span class=java10>, </span><span class=java7>5</span><span
class=java10>, p</span><span class=java8>)</span><span class=java10>;</span><br>
<span class=java10>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><br>
<span class=java10>&nbsp;&nbsp;&nbsp; </span><span class=java8>}</span><br>
<span class=java8>&nbsp;&nbsp;&nbsp; </span><br>
<span class=java8>&nbsp; }</span></pre>

<p style='margin-left:1.0cm'>Рассмотрим тот же path, что и в первом примере. Но
теперь для настройки матрицы используем метод <a
href="http://developer.android.com/reference/android/graphics/Matrix.html#setScale%28float,%20float,%20float,%20float%29"
target="_blank">setScale</a>. На вход ему передаем коэффициенты изменения
размера в ширину (2), в высоту (2.5) и координаты точки (375, 100),
относительно которой будет выполнено изменение размера.</p>

<p style='margin-left:1.0cm'>Результат:</p>

<p style='margin-left:1.0cm'><!--[if gte vml 1]><v:shape id="_x0000_i1027"
 type="#_x0000_t75" style='width:480pt;height:300pt'>
 <v:imagedata src="lk15.files/image005.png" o:href="http://startandroid.ru/images/stories/lessons/L0144/L0144_020.png"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=640 height=400
src="lk15.files/image006.jpg" v:shapes="_x0000_i1027"><![endif]></p>

<p style='margin-left:1.0cm'>Видим, что крест стал в два раза шире и в два с
половиной раза выше. Точку, относительно которой было выполнено изменение
размера, мы отметили черным кругом.</p>

<p style='margin-left:1.0cm'>Существует также вариант метода <a
href="http://developer.android.com/reference/android/graphics/Matrix.html#setScale%28float,%20float%29"
target="_blank">setScale</a>, который позволяет не указывать точку. В этом
случае используется точка (0,0).</p>

<p style='margin-left:1.0cm'><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt'>Bitma</span></b><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:14.0pt;mso-ansi-language:EN-US'>p</span></b><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Начинаем тему Bitmap. Без нее в рисовании никуда,
т.к. Bitmap – это объект, который хранит в себе изображение. Та же канва, с
которой мы обычно работаем, это обертка, которая принимает команды от нас и
рисует их на Bitmap, который мы видим в результате.</p>

<p style='margin-left:1.0cm'>Мы рассмотрим все основные операции с Bitmap и
обязательно разберем интересные материалы с официального сайта по этой теме.</p>

<p style='margin-left:1.0cm'>Начнем с основ. Посмотрим какие методы есть для
создания Bitmap из файла, как вывести его на канву и какую инфу о себе может
рассказать Bitmap.</p>

<p style='margin-left:1.0cm'>Для получения изображения из файла используется
фабрика <a
href="http://developer.android.com/reference/android/graphics/BitmapFactory.html"
target="_blank">BitmapFactory</a>. У нее есть несколько decode* методов,
которые принимают на вход массив байтов, путь к файлу, поток, файловый
дескриптор или идентификатор ресурса. И на выходе мы получаем Bitmap.</p>

<p style='margin-left:1.0cm'>Самые используемые из методов чтения это, конечно,
следующие:</p>

<p style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/graphics/BitmapFactory.html#decodeFile%28java.lang.String%29"
target="_blank">decodeFile(String pathName)</a> – получить Bitmap из файла,
указав его путь. Т.е. этим методом можем считать картинку с SD-карты. <span
lang=EN-US style='mso-ansi-language:EN-US'>(getExternalStorageDirectory)<o:p></o:p></span></p>

<p style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/graphics/BitmapFactory.html#decodeResource%28android.content.res.Resources,%20int%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>decodeResource(Resources
res, int id)</span></a><span lang=EN-US style='mso-ansi-language:EN-US'> – </span>получить<span
lang=EN-US style='mso-ansi-language:EN-US'> Bitmap </span>из<span lang=EN-US
style='mso-ansi-language:EN-US'> drawable-</span>ресурса<span lang=EN-US
style='mso-ansi-language:EN-US'>, </span>указав<span style='mso-ansi-language:
EN-US'> </span>его<span lang=EN-US style='mso-ansi-language:EN-US'> ID. </span>Этот
метод вернет нам картинку из папок res/drawable нашего приложения.</p>

<p style='margin-left:1.0cm'>Сейчас рассмотрим способы создания <span
lang=EN-US style='mso-ansi-language:EN-US'>Bitmap</span>. Для этого есть
несколько статических методов createBitmap. Все эти методы создания Bitmap
можно разделить на три группы:</p>

<p style='margin-left:1.0cm'>1) создание на основе другого Bitmap<br>
2) создание из массива цветов<br>
3) создание пустого Bitmap</p>

<p style='margin-left:1.0cm'>Рассмотрим эти группы подробно.</p>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>Создание на основе другого Bitmap<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Эти методы позволяют нам взять готовый Bitmap и
скопировать его целиком или частично в новый bitmap. При этом поддерживаются
преобразования с помощью матрицы.</p>

<p style='margin-left:1.0cm'>В этой группе 4 метода.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>1)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.graphics.Bitmap,%20int,%20int,%20int,%20int,%20android.graphics.Matrix,%20boolean%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(Bitmap
source, int x, int y, int width, int height, Matrix m, boolean filter)</span></a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>параметры:<br>
<b>source</b> – Bitmap-источник, от которого будем брать его часть<br>
<b>x,y</b> – координаты точки, от которой будем отсчитывать часть<br>
<b>width, height</b> – высота и ширина части<br>
<b>m</b> – матрица для применения преобразований к взятой части<br>
<b>filter</b> – если true, то будет включено сглаживание при scale- и
rotate-преобразованиях матрицы (но это приведет к некоторой потере в
производительности)</p>

<p style='margin-left:1.0cm'>Этот метод возьмет от Bitmap-источника часть
указанную координатами и размерами, применит к ней матрицу и фильтр и вернет
нам как новый Bitmap.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>2)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.graphics.Bitmap,%20int,%20int,%20int,%20int%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(Bitmap
source, int x, int y, int width, int height)</span></a><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Аналогичен методу 1, но без использования матрицы
и фильтра. Т.е. просто возьмет указанную часть от Bitmap-источника.</p>

<p style='margin-left:1.0cm'>3) <a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.graphics.Bitmap%29"
target="_blank">createBitmap(Bitmap src)</a></p>

<p style='margin-left:1.0cm'>Вызывает метод 2 с параметрами createBitmap(src,
0, 0, src.getWidth(), src.getHeight()). Т.е. указанная часть равна всему
Bitmap.</p>

<p style='margin-left:1.0cm'>В итоге мы получим тот же Bitmap, что и источник.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>4)&nbsp;</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createScaledBitmap%28android.graphics.Bitmap,%20int,%20int,%20boolean%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createScaledBitmap(Bitmap
src, int dstWidth, int dstHeight, boolean filter)</span></a><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Вызывает<span style='mso-ansi-language:EN-US'> </span>метод<span
lang=EN-US style='mso-ansi-language:EN-US'> 2 </span>с<span style='mso-ansi-language:
EN-US'> </span>параметрами<span lang=EN-US style='mso-ansi-language:EN-US'>
createBitmap(src, 0, 0, src.getWidth(),src.getHeight(), m, filter). </span>Т.е.
указанная часть равна всему Bitmap. Но дополнительно применяется матрица m, где
рассчитаны преобразования, чтобы новый Bitmap получился размерами dstWidth на
dstHeight. Также, можно включить сглаживающий фильтр.</p>

<p style='margin-left:1.0cm'>В итоге мы получим тот же Bitmap, что и источник,
но он будет нужных нам размеров, заданных параметрами dstWidth и dstHeight.</p>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>Создание из массива цветов<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Эти методы позволяют нам создать Bitmap из готового
массива цветов.</p>

<p style='margin-left:1.0cm'>В<span style='mso-ansi-language:EN-US'> </span>этой<span
style='mso-ansi-language:EN-US'> </span>группе<span lang=EN-US
style='mso-ansi-language:EN-US'> 4 </span>метода<span lang=EN-US
style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>1)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.util.DisplayMetrics,%20int[],%20int,%20int,%20int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(DisplayMetrics
display, int[] colors, int offset, int stride, int width, int height,
Bitmap.Config config)</span></a><span lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>параметры:<br>
<b>display</b> – объект DisplayMetrics, из которого Bitmap возьмет значение
densityDpi (зачем он нужен, рассмотрим чуть позже)<br>
<b>colors</b> – массив цветов, т.е. фактически массив пикселов из которых будет
состоять созданный Bitmap<br>
<b>offset</b> – отступ от начала colors при чтении его значений<br>
<b>stride</b> – шаг, который будет использован для перемещения по массиву при
смене строки Bitmap<br>
<b>width, height</b> – размеры создаваемого Bitmap<br>
<b>config</b> – конфигурация</p>

<p style='margin-left:1.0cm'>Все параметры в целом понятны. Объясню немного
подробнее про <b>stride</b>, насколько мне удалось его понять. Рассмотрим
пример, где параметр <b>offset</b> будем считать равным 0, ширину <b>bitmap</b>
= 100, <b>stride</b> = 150.</p>

<p style='margin-left:1.0cm'>Система создает Bitmap и заполняет его цветами из
массива построчно. Но элементы массива она берет не все подряд, а высчитывает
индекс первого элемента для каждой новой строки по формуле: <br>
индекс первого элемента для каждой строки = (номер строки – 1) * stride</p>

<p style='margin-left:1.0cm'>Т.е для первой строки – индекс первого элемента
будет (1-1)*150 = 0. И начиная от него будут взяты цвета для первой строки,
т.е. элементы [0-99], всего 100 элементов, т.к. ширина = 100). Для второй
строки индекс первого элемента будет (2-1)*150 = 150. И для второй строки буду
взяты цвета [150-249]. И т.д.</p>

<p style='margin-left:1.0cm'>В итоге мы получаем Bitmap для которого сами
указали значения цветов всех его пикселов.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>2)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.util.DisplayMetrics,%20int[],%20int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(DisplayMetrics
display, int[] colors, int width, int height, Bitmap.Config config)</span></a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Вызывает<span style='mso-ansi-language:EN-US'> </span>метод<span
lang=EN-US style='mso-ansi-language:EN-US'> 1 </span>с<span style='mso-ansi-language:
EN-US'> </span>параметрами<span lang=EN-US style='mso-ansi-language:EN-US'>
createBitmap(display, colors, 0, width, width, height, config). </span>Т.е.
offset = 0, а stride = ширине Bitmap (цвета для строк будут браться из массива
последовательно, без пропусков при переходе на новую строку).</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>3)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28int[],%20int,%20int,%20int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(int[]
colors, int offset, int stride, int width, int height, Bitmap.Config config)</span></a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Аналогичен методу 1, но без использования display.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>4)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28int[],%20int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(int[]
colors, int width, int height, Bitmap.Config config)</span></a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Аналогичен методу 2, но без использования display.</p>

<h3 style='margin-left:1.0cm'><span style='font-size:14.0pt;mso-bidi-font-size:
13.5pt'>Создание чистого Bitmap<o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>Эти методы позволяют создать чистый Bitmap без
каких-либо данных.</p>

<p style='margin-left:1.0cm'>В<span style='mso-ansi-language:EN-US'> </span>этой<span
style='mso-ansi-language:EN-US'> </span>группе<span lang=EN-US
style='mso-ansi-language:EN-US'> 2 </span>метода<span lang=EN-US
style='mso-ansi-language:EN-US'>.<o:p></o:p></span></p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>1)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28android.util.DisplayMetrics,%20int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(DisplayMetrics
display, int width, int height, Bitmap.Config config)</span></a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>параметры:<br>
<b>display</b> – объект DisplayMetrics, из которого Bitmap возьмет значение
densityDpi (зачем он нужен, рассмотрим чуть позже)<br>
<b>width, height</b> – размеры создаваемого Bitmap<br>
<b>config </b>– конфигурация </p>

<p style='margin-left:1.0cm'>Создается чистый Bitmap с указанными
характеристиками.</p>

<p style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:EN-US'>2)
</span><a
href="http://developer.android.com/reference/android/graphics/Bitmap.html#createBitmap%28int,%20int,%20android.graphics.Bitmap.Config%29"
target="_blank"><span lang=EN-US style='mso-ansi-language:EN-US'>createBitmap(int
width, int height, Bitmap.Config config)</span></a><span lang=EN-US
style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p style='margin-left:1.0cm'>Аналогичен методу 1, но без использования display</p>

<p style='margin-left:1.0cm'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='font-size:14.0pt;mso-bidi-font-size:12.0pt;mso-ansi-language:
EN-US'>3D. </span></b><b style='mso-bidi-font-weight:normal'><span
style='font-size:14.0pt;mso-bidi-font-size:12.0pt'>Использование </span></b><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:14.0pt;
mso-bidi-font-size:12.0pt;mso-ansi-language:EN-US'>GLSurfaceView</span></b><b
style='mso-bidi-font-weight:normal'><span style='font-size:14.0pt;mso-bidi-font-size:
12.0pt'>.<o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:1.0cm'>Продолжаем тему графики, и
переходим на следующий уровень, который
называется&nbsp;OpenGL&nbsp;ES.&nbsp;Расшифровывается это
как&nbsp;OpenGL&nbsp;for&nbsp;Embedded&nbsp;Systems,
т.е.&nbsp;OpenGL&nbsp;для&nbsp;встраиваемых систем&nbsp;(android-девайсы в
нашем случае).</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Давайте приступим к созданию
нашего первого минимального примера.&nbsp;Обсудим&nbsp;его&nbsp;ключевые
элементы.</p>

<p class=MsoNormal style='margin-left:1.0cm'>1) Изображение надо на чем-то
показывать. Для этого мы будем использовать компонент&nbsp;<a
href="http://developer.android.com/reference/android/opengl/GLSurfaceView.html"
target="_blank">GLSurfaceView</a>&nbsp;(далее -&nbsp;surface).</p>

<p class=MsoNormal style='margin-left:1.0cm'>2) Изображение кто-то должен
создавать, т.е. принимать от нас инструкции, что и как рисовать. Этим будет
заниматься&nbsp;<a
href="http://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html"
target="_blank">Renderer</a>&nbsp;(далее - рендер).</p>

<p class=MsoNormal style='margin-left:1.0cm'>3) Ну и нужна будет проверка, что
девайс поддерживает&nbsp;OpenGL&nbsp;2.0, иначе ничего не будет работать.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Начнем с создания класса рендера.
Объект этого рендер-класса мы потом будем передавать в surface, которое в
процессе своей работы будет вызывать&nbsp;методы рендера.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Рендер имеет три метода:</p>

<p class=MsoNormal style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html#onSurfaceCreated(javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.egl.EGLConfig)"
target="_blank">onSurfaceCreated</a>&nbsp;- вызывается при
создании/пересоздании&nbsp;surface. Т.е. метод будет вызываться при запуске
приложения или, например, в уже запущенном приложении при выходе девайса из
сна. Здесь будет выполняться установка&nbsp;OpenGL&nbsp;параметров и инициализация
графических объектов.</p>

<p class=MsoNormal style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html#onSurfaceChanged(javax.microedition.khronos.opengles.GL10, int, int)"
target="_blank">onSurfaceChanged</a>&nbsp;- вызывается при изменении
размера&nbsp;surface. Самый распространенный пример - смена ориентации экрана.</p>

<p class=MsoNormal style='margin-left:1.0cm'><a
href="http://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html#onDrawFrame(javax.microedition.khronos.opengles.GL10)"
target="_blank">onDrawFrame</a>&nbsp;- вызывается, когда&nbsp;surface&nbsp;готово
отобразить очередной кадр. В этом методе мы и будем создавать изображение.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Создаем
класс&nbsp;OpenGLRenderer,&nbsp;который реализует интерфейс Renderer:</p>

<p class=MsoNormal style='margin-left:1.0cm'><br>
public class OpenGLRenderer implements Renderer {<br>
<br>
&nbsp; @Override<br>
&nbsp; public void onDrawFrame(GL10 arg0) {<br>
&nbsp;&nbsp;&nbsp; glClear(GL_COLOR_BUFFER_BIT);<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp; }<br>
<br>
&nbsp; @Override<br>
&nbsp; public void onSurfaceChanged(GL10 arg0, int width, int height) {<br>
&nbsp;&nbsp;&nbsp; glViewport(0, 0, width, height);<br>
<br>
&nbsp; }<br>
<br>
&nbsp; @Override<br>
&nbsp; public void onSurfaceCreated(GL10 arg0, EGLConfig arg1) {<br>
&nbsp;&nbsp;&nbsp; glClearColor(0f, 1f, 0f, 1f);<br>
&nbsp; }<br>
<br>
}</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>В&nbsp;onSurfaceCreated&nbsp;мы
вызываем метод&nbsp;<a
href="https://www.khronos.org/opengles/sdk/docs/man/xhtml/glClearColor.xml"
target="_blank">glClearColor</a>&nbsp;и передаем ему RGBA-компоненты&nbsp;в
диапазоне от 0 до 1. Тем самым мы устанавливаем дефолтный цвет, который будет
отображаться после полной очистки&nbsp;surface.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>А в
методе&nbsp;onDrawFrame&nbsp;мы как раз выполняем эту очистку. Метод&nbsp;<a
href="https://www.khronos.org/opengles/sdk/docs/man/xhtml/glClear.xml"
target="_blank">glClear</a>&nbsp;с параметром GL_COLOR_BUFFER_BIT очистит все
цвета на экране, и установит цвет, заданный методом&nbsp;glClearColor.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>В
методе&nbsp;onSurfaceChanged&nbsp;мы методом&nbsp;<a
href="https://www.khronos.org/opengles/sdk/docs/man/xhtml/glViewport.xml"
target="_blank">glViewPort</a>&nbsp;задаем область&nbsp;surface, которая будет
доступна для вывода изображения. Мы указываем левую нижнюю точку - (0,0) и
размеры области - (width,&nbsp;height), т.е.&nbsp; изображение будет выведено
на все&nbsp;surface.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Рендер готов. Теперь надо
в&nbsp;Activity&nbsp;повесить&nbsp;surface&nbsp;и настроить его.</p>

<p class=MsoNormal style='margin-left:1.0cm'><br>
public class MainActivity extends Activity {<br>
&nbsp; <br>
&nbsp; private GLSurfaceView glSurfaceView;<br>
<br>
&nbsp; @Override<br>
&nbsp; protected void onCreate(Bundle savedInstanceState) {<br>
&nbsp;&nbsp;&nbsp; super.onCreate(savedInstanceState);<br>
&nbsp;&nbsp;&nbsp; if (!supportES2()) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Toast.makeText(this, &quot;OpenGl ES 2.0 is not
supported&quot;, Toast.LENGTH_LONG).show();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; finish();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; glSurfaceView = new GLSurfaceView(this);<br>
&nbsp;&nbsp;&nbsp; glSurfaceView.setEGLContextClientVersion(2);<br>
&nbsp;&nbsp;&nbsp; glSurfaceView.setRenderer(new OpenGLRenderer());<br>
&nbsp;&nbsp;&nbsp; setContentView(glSurfaceView);<br>
&nbsp; }<br>
&nbsp; <br>
&nbsp; @Override<br>
&nbsp; protected void onPause() {<br>
&nbsp;&nbsp;&nbsp; super.onPause();<br>
&nbsp;&nbsp;&nbsp; glSurfaceView.onPause();<br>
&nbsp; }<br>
&nbsp; <br>
&nbsp; @Override<br>
&nbsp; protected void onResume() {<br>
&nbsp;&nbsp;&nbsp; super.onResume();<br>
&nbsp;&nbsp;&nbsp; glSurfaceView.onResume();<br>
&nbsp; }<br>
&nbsp; <br>
&nbsp; private boolean supportES2() {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ActivityManager activityManager =<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
(ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
ConfigurationInfo configurationInfo = activityManager.getDeviceConfigurationInfo();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return
(configurationInfo.reqGlEsVersion &gt;= 0x20000);<br>
&nbsp; }<br>
<br>
}</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>В&nbsp;onCreate&nbsp;мы сначала
нашим методом supportES2 определяем, что девайс
поддерживает&nbsp;OpenGL&nbsp;ES 2.0 и выше. Если нет, то закрываемся.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Если же все&nbsp;ок,
то&nbsp;&nbsp;<br>
- создаем&nbsp;GLSurfaceView,&nbsp;&nbsp;<br>
- методом&nbsp;setEGLContextClientVersion&nbsp;говорим ему, что будем
использовать&nbsp;OpenGL&nbsp;ES версии 2&nbsp;&nbsp;<br>
- методом&nbsp;setRenderer&nbsp;передаем экземпляр нашего
класса&nbsp;OpenGLRenderer. Теперь этот рендер будет отвечать за то, что будет
нарисовано на&nbsp;surface<br>
- методом&nbsp;setContentView ставим surface как основное View для Activity</p>

<p class=MsoNormal style='margin-left:1.0cm'>Кроме этого, необходимо
привязать&nbsp;surface&nbsp;к&nbsp;lifecycle-методам&nbsp;Activity:&nbsp;onPause&nbsp;и&nbsp;onResume,
вызвав в них одноименные&nbsp;surface-методы.</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Все готово. Запускаем</p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'><!--[if gte vml 1]><v:shape id="_x0000_i1028"
 type="#_x0000_t75" style='width:5in;height:600pt'>
 <v:imagedata src="lk15.files/image007.png" o:href="http://startofandroid.com/images/stories/lessons/L0168/L0168_010.png"/>
</v:shape><![endif]--><![if !vml]><img border=0 width=480 height=800
src="lk15.files/image008.jpg" v:shapes="_x0000_i1028"><![endif]></p>

<p class=MsoNormal style='margin-left:1.0cm'><o:p>&nbsp;</o:p></p>

<p class=MsoNormal style='margin-left:1.0cm'>Экран заполнен зеленым цветом.
Первое простейшее OpenGL-приложение готово.</p>

<h3 style='margin-left:1.0cm'><o:p>&nbsp;</o:p></h3>

<h3 style='margin-left:1.0cm'><o:p>&nbsp;</o:p></h3>

<h3 style='margin-left:1.0cm'>Литература.</h3>

<h3 style='margin-left:1.0cm'><span style='font-size:11.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>1. <span style='mso-spacerun:yes'> </span></span>Рисование
2D графики в окне программы<span style='font-size:11.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>. </span><span style='font-size:11.0pt'><a
href="http://microsin.net/programming/android/canvas-and-drawables.html">http://microsin.net/programming/android/canvas-and-drawables.html</a></span><span
style='font-size:11.0pt;font-weight:normal;mso-bidi-font-weight:bold'> <o:p></o:p></span></h3>

<h3 style='margin-left:1.0cm'><span style='font-size:11.0pt;font-weight:normal;
mso-bidi-font-weight:bold'>2. </span><span style='font-size:11.0pt'>Рисование. Графика.
Уроки 141-163<span style='mso-spacerun:yes'>  </span></span><span lang=EN-US
style='font-size:11.0pt;mso-ansi-language:EN-US'><a
href="http://startandroid.ru/ru/uroki/vse-uroki-spiskom.html">http<span
lang=RU style='mso-ansi-language:RU'>://</span>startandroid<span lang=RU
style='mso-ansi-language:RU'>.</span>ru<span lang=RU style='mso-ansi-language:
RU'>/</span>ru<span lang=RU style='mso-ansi-language:RU'>/</span>uroki<span
lang=RU style='mso-ansi-language:RU'>/</span>vse<span lang=RU style='mso-ansi-language:
RU'>-</span>uroki<span lang=RU style='mso-ansi-language:RU'>-</span>spiskom<span
lang=RU style='mso-ansi-language:RU'>.</span>html</a></span><span
style='font-size:11.0pt;font-weight:normal;mso-bidi-font-weight:bold'><o:p></o:p></span></h3>

<p style='margin-left:1.0cm'>3. <a
href="http://developer.android.com/guide/topics/graphics/2d-graphics.html"
target="_blank">http://developer.android.com/guide/topics/graphics/2d-graphics.html</a><span
lang=EN-US style='mso-ansi-language:EN-US'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0cm'><span lang=EN-US style='mso-ansi-language:
EN-US'>4. </span><a
href="http://developer.android.com/guide/topics/graphics/opengl.html"
target="_blank">http://developer.android.com/guide/topics/graphics/opengl.html</a>;</p>

<p style='margin-left:1.0cm'>5. <a
href="http://developer.android.com/guide/topics/graphics/hardware-accel.html"
target="_blank">http://developer.android.com/guide/topics/graphics/hardware-accel.html</a></p>

<p style='margin-left:1.0cm'>6. <b style='mso-bidi-font-weight:normal'><span
style='font-size:11.0pt'>Рисование. Графика. Уроки 168-176 </span></b><span
style='font-size:11.0pt'><span style='mso-spacerun:yes'> </span></span><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='font-size:11.0pt;
mso-ansi-language:EN-US'><a
href="http://startandroid.ru/ru/uroki/vse-uroki-spiskom.html">http<span
lang=RU style='mso-ansi-language:RU'>://</span>startandroid<span lang=RU
style='mso-ansi-language:RU'>.</span>ru<span lang=RU style='mso-ansi-language:
RU'>/</span>ru<span lang=RU style='mso-ansi-language:RU'>/</span>uroki<span
lang=RU style='mso-ansi-language:RU'>/</span>vse<span lang=RU style='mso-ansi-language:
RU'>-</span>uroki<span lang=RU style='mso-ansi-language:RU'>-</span>spiskom<span
lang=RU style='mso-ansi-language:RU'>.</span>html</a></span><o:p></o:p></b></p>

</div>

</body>

</html>
